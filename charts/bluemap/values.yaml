# Default values for bluemap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/bluemap-minecraft/bluemap
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v5.11"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8100

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 500m
     memory: "1Gi"
   requests:
     cpu: 100m
     memory: ".5Gi"

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

### BlueMap Specific Values ###

bluemap:
  packs:
    - "https://github.com/TheMeinerLP/BlueMapS3Storage/releases/download/v1.4.0/BlueMapS3Storage-1.4.0.jar"
  config:
    - path: "/app/config/core.conf"
      content: |
        ##                          ##
        ##         BlueMap          ##
        ##       Core-Config        ##
        ##                          ##
        
        # By changing the setting (accept-download) below to TRUE you are indicating that you have accepted mojang's EULA (https://account.mojang.com/documents/minecraft_eula),
        # you confirm that you own a license to Minecraft (Java Edition)
        # and you agree that BlueMap will download and use a minecraft-client file (depending on the minecraft-version) from mojangs servers (https://piston-meta.mojang.com/) for you.
        # This file contains resources that belong to mojang and you must not redistribute it or do anything else that is not compliant with mojang's EULA.
        # BlueMap uses resources in this file to generate the 3D-Models used for the map and texture them. (BlueMap will not work without those resources.)
        # 2025-08-14T10:51:51
        accept-download: false
        
        # The folder where bluemap saves data-files it needs during runtime or to save e.g. the render-progress to resume it later.
        # Default is "bluemap"
        data: "bluemap"
        
        # This changes the amount of threads that BlueMap will use to render the maps.
        # A higher value can improve render-speed but could impact performance on the host machine.
        # This should be always below or equal to the number of available processor-cores.
        # Zero or a negative value means the amount of available processor-cores subtracted by the value.
        # (So a value of -2 with 6 cores results in 4 render-processes)
        # Default is 1
        render-thread-count: 3
        
        # Controls whether BlueMap should try to find and load mod-resources and datapacks from the server/world-directories.
        # Default is true
        scan-for-mod-resources: true
        
        # If this is true, BlueMap might send really basic metrics reports containing only the implementation-type and the version that is being used to https://metrics.bluecolored.de/bluemap/
        # This allows me to track the basic usage of BlueMap and helps me stay motivated to further develop this tool! Please leave it on :)
        # An example report looks like this: {"implementation":"bukkit","version":"5.11","mcVersion":"?"}
        # Default is true
        metrics: true
        
        # Config-section for debug-logging
        log: {
          # The file where the debug-log will be written to.
          # Comment out to disable debug-logging completely.
          # Java String formatting syntax can be used to add time, see: https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html
          # Default is no logging
          file: "bluemap/logs/debug.log"
            #file: "bluemap/logs/debug_%1$tF_%1$tT.log"
            
            # Whether the logger should append to an existing file, or overwrite it
            # Default is false
            append: false
        }
        
