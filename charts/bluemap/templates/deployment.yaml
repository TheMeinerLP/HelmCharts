apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bluemap.fullname" . }}
  labels:
    {{- include "bluemap.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bluemap.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bluemap.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bluemap.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "-r -u -w"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- include "bluemap.configmapVolumeMounts" . | nindent 12 }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
      initContainers:
        - name: seed-packs
          image: alpine:3.20
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              set -eu
              apk add --no-cache curl unzip
              echo "[Seed Packs] Downloading latest BlueMap packs..."
              mkdir -p /app/packs
              i=1
              for url in {{- range $i, $pack := .Values.packs }} {{ $pack }} {{- end }}; do
                curl -fsSL "$url" -o "/app/packs/pack${i}.jar"
                i=$((i+1))
              done
          volumeMounts:
            - name: packs
              mountPath: /app/packs
      volumes:
        - name: packs
          emptyDir: {}
        {{- include "bluemap.configmapVolumes" . | nindent 8 }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
