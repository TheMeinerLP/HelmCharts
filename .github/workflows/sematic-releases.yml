name: release
on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  detect-charts:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          charts=$(ls -d charts/*/ | xargs -n1 basename | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix={\"chart\": $charts}" >> $GITHUB_OUTPUT

  semantic_release_per_chart:
    needs: detect-charts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-charts.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: "20" }

      - name: Install release tooling
        run: |
          npm i -D semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github semantic-release-helm3

      - name: semantic-release for chart
        working-directory: charts/${{ matrix.chart }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Nur releasen, wenn sich im Chart-Ordner etwas geändert hat:
          if git diff --quiet origin/main...HEAD -- . ; then
            echo "No changes in charts/${{ matrix.chart }} — skipping."
            exit 0
          fi
          npx semantic-release
  release:
    needs: semantic_release_per_chart
    runs-on: ubuntu-latest
    # Need write permission to create releases and push to gh-pages branch
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: charts
          # Skip packaging if the chart version hasn't changed
          # This is important to work well with the semantic release process
          skip_existing: true
